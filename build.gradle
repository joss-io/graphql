
buildscript {

  repositories {
    jcenter()
    maven {
      url 'https://plugins.gradle.org/m2/'
    }
  }

  dependencies {
	classpath "com.prezi.pride:gradle-pride-plugin:0.11"
	classpath "com.jfrog.bintray.gradle:gradle-bintray-plugin:1+"
    classpath 'net.ltgt.gradle:gradle-apt-plugin:0.15'
  }

}

ext.libraries = [
  lombok: 'org.projectlombok:lombok:1.16.18',
  junit: 'junit:junit:4.12',
  guava: 'com.google.guava:guava:23.1-jre',
  slf4j: [
    api: 'org.slf4j:slf4j-api:1.7.25'
  ],
  logback: [
    classic: 'ch.qos.logback:logback-classic:1.2.3'
  ],
  jackson: [
    databind: 'com.fasterxml.jackson.core:jackson-databind:2.9.1',
    jaxrs_json_provider: 'com.fasterxml.jackson.jaxrs:jackson-jaxrs-json-provider:2.9.1'
  ],
  apache: [
    commons: [
      lang3: 'org.apache.commons:commons-lang3:3.6'
    ]
  ],
  grpc: [
    netty: 'io.grpc:grpc-netty:1.0.3'
  ],
  unirest: 'com.mashape.unirest:unirest-java:1.4.9',
  assertj: [
    core: 'org.assertj:assertj-core:3.6.1'
  ]
]

allprojects {


  group = 'io.zrz.graphql'
  version = '2.0-SNAPSHOT'

}

subprojects {

  apply plugin: 'java-library'
  apply plugin: 'eclipse'
  apply plugin: 'net.ltgt.apt'
  apply plugin: 'net.ltgt.apt-eclipse'
  apply plugin: 'maven'


  repositories {
    maven { url 'https://jitpack.io' }
    jcenter()
  }

  sourceCompatibility = 9
  targetCompatibility = 9



// --------------------------------------------------
// compile
// --------------------------------------------------


tasks.withType(JavaCompile) {
    options.compilerArgs << '-parameters'
}


eclipse {
  jdt {
    file {
      withProperties { properties ->
        properties.setProperty("org.eclipse.jdt.core.compiler.codegen.methodParameters", "generate")
      }
    }
  }
}

  // --------------------------------------------------
  // install
  // --------------------------------------------------


  task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
  }

  tasks.withType(Javadoc) {
      options.addStringOption('Xdoclint:none', '-quiet')
  }
    
  task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
  }

  javadoc {
    options.addBooleanOption('html5', true)
  }  

  artifacts {
    archives sourcesJar
    //archives javadocJar
  }

  javadoc {
    title = "ZRZ GraphQL"
    failOnError = false
    exclude "**/impl/**";
  }

  // To specify a license in the pom:
  install {
    repositories.mavenInstaller {
      pom.project {
        licenses {
          license {
            name 'The Apache Software License, Version 2.0'
            url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
            distribution 'repo'
          }
        }
      }
    }
  }
  
}

task wrapper(type: Wrapper) {
    gradleVersion = '4.8'
}
