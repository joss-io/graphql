
eclipse.project.name = 'graphql:runtime'

dependencies {
  
  // runtime shared dependencies.
  api                 'org.slf4j:slf4j-api:1.7.25'

  // these are internal only, shaded for deploy.
  implementation      'com.google.guava:guava:25.1-jre'
  implementation      'org.apache.commons:commons-lang3:3.7'
  
  //api      'io.zrz:zulu:1.0'
  // api 'com.github.zourzouvillys:commons:2502e272a8'
  api      project(':zulu-types')
  
  // api      'io.zrz:zulu:1.0'
  
  implementation      'org.apache.commons:commons-text:1.4'
  implementation      'net.jodah:typetools:0.5.0'
  
  api      project(':graphql-annotations')
  api      project(':graphql-core')

  // also used at runtime ...
  compile         'org.eclipse.jdt:org.eclipse.jdt.annotation:2.1.100'
  
  // compile time only dependencies
  compileOnly         'com.google.errorprone:error_prone_annotations:2.3.1'
  //compileOnly         'org.glassfish:javax.annotation:10.0-b28'

  compileOnly         'org.immutables:builder:2.6.1'
  compileOnly         'org.immutables:value:2.6.1'

  annotationProcessor 'org.immutables:builder:2.6.1'
  annotationProcessor 'org.immutables:value:2.6.1'

  testImplementation  'junit:junit:4.12'
  testImplementation  'org.assertj:assertj-core:3.6.1'
  testImplementation  'ch.qos.logback:logback-classic:1.2.3'

}


compileJava {
    inputs.property("moduleName", "zrz.graphql.runtime")
    doFirst {
        options.compilerArgs = [ '--module-path', classpath.asPath ]
        classpath = files()
    }
}


eclipse {
    classpath {
        file.whenMerged { cp ->
            cp.entries.add( new org.gradle.plugins.ide.eclipse.model.SourceFolder('build/generated/source/apt/main/', null) )
        }
    }
}

eclipse.classpath.file {
  whenMerged {
    entries
      .findAll { it.kind.equals('lib') || it.kind.equals('src') }
      .each {
        it.entryAttributes['module'] = 'true' 
      } 
  }
}