//buildscript {dependencies {classpath 'com.github.jengelman.gradle.plugins:shadow:2.0.4'}}

//apply plugin: 'com.github.johnrengelman.plugin-shadow'

eclipse.project.name = 'graphql:schema'

dependencies {
  
  // runtime shared dependencies.
  api                 'org.slf4j:slf4j-api:1.7.25'
  
  // these are internal only, shaded for deploy.
  implementation      'com.google.guava:guava:25.1-jre'
  implementation      'org.apache.commons:commons-lang3:3.7'
  implementation      'org.apache.commons:commons-text:1.4'
  implementation      'net.jodah:typetools:0.5.0'
  api       project(':graphql-core')
  
  // compile time only dependencies
  compileOnly         'org.eclipse.jdt:org.eclipse.jdt.annotation:2.1.100'

  compileOnly         'org.immutables:builder:2.6.1'
  compileOnly         'org.immutables:value:2.6.1:annotations'

  annotationProcessor 'org.immutables:builder:2.6.1'
  annotationProcessor 'org.immutables:value:2.6.1'

  testImplementation  'junit:junit:4.12'
  testImplementation  'org.assertj:assertj-core:3.6.1'
  testImplementation  'ch.qos.logback:logback-classic:1.2.3'

}

//shadowJar {
//   baseName = 'shadow'
//   classifier = null
//   version = null
//}


compileJava {
    inputs.property("moduleName", "zrz.graphql.schema")
    doFirst {
        options.compilerArgs = [
            '--module-path', classpath.filter { true } .asPath,            
        ]
        classpath = files()
    }
}

eclipse.classpath.file {
  whenMerged {
    entries
      .findAll { it.kind.equals('lib') || it.kind.equals('src') }
      .each {
        it.entryAttributes['module'] = 'true' 
      } 
  }
}